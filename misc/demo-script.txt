
 # Okay, where do we start? 
 
c misc

 # We are inside the dotfiles repo.
 # Let's have a look.

l

 # I'm using colorls to have sane file sizes, git status, some 
 # icons and highlights for recently changed stuff.
 # And I'm lazy, trying to type as little as possible .. hence the l 
 # alias to see all normal files and ll to list everyting.

ll

 # The prompt also shows that you are inside a git repo by displaying 
 # the current branch. We currently are on branch master. 
 # A red branch name indicates it's dirty, lets see why.

gs

 # diff-so-fancy will give a more detailed look at what changed also marking 
 # changes inside a line. 
 
gd
SLEEP: 2
q
 
 # ga will also let you tab complete the changed files.

ga demo-ß
gc last additions to the demo script

 # How did we get here in the first place?
 # That was fasd remembering my locations based on recent usage.

c | tail

 # This way you can instantly jump into any know dir.

c kunde

 # This also works with files!
 # Oh, let's test this new idea and change this alias.

v ali
SLEEP: 2
:q

 # Voila! Open any file from anywhere!

 # This was SpaceVim, which is also included.
 # Let's have a look what's in here

l

 # Oh, most of the folders start with the same kp_micro_ .. no luck 
 # tab completiing there, but what if we ..

 cd ssoß

 # Yes, you don't have to start typing from the beginning! Very nice!
 # Let's have a look into this version file.

cat verü
SLEEP: 1
ß

 # Try that with bash .. you dont need to write upper case letters!
 # ZSH will also let you see all matching alternatives.

cat reßßß

 # And also this is not the normal cat. It's bat which also gives you 
 # syntax highlighting - speeking of which:

which cat

 # I pimped the which command a lil - it will even show the current version for
 # commands that support the kinda standard --version flag.
 # Lets go back to the dotfiles folder.

c dot

 # You can also use numbers to go back up to 9 directories.

2
3

 # Also included are some fonts and the iTerm colors shown here.

 # Let's have a look at the git history. You can do

git log
q

 # But I'm also too lazy for that .. and lets be honest, the default log 
 # is missing some info and could look a lil like this.

gg
SLEEP: 2
q

 # Have a look into the alias file to find some more usefull stuff like 

ip

 # It's showing off your current ip and details, so if you constantly 
 # forget the zip code like I am:

ip J .postal

 # What was that? It's called a global alias. So J ist basically | jq where jq 
 # is a must have tool, if you work with JSON. I have defined some of those 
 # global aliases since they are very handy! 

rg "alias -g" .alias

 # So if you want to find that process ..

ps aux G redis
SLEEP: 2

 # I was typing | grep a lot before i found out about those global aliases.
 # But nobody should use grep anymore if ripgrep is available on the system. :)
 # And even if its not, there still are better choices like ack.

 # Killing stuff can also be done with tab completion.

kill redß

 # red got replaced with its process id like shown above.
 # Let's start redis again.

redis-server &

 # The little cog wheel shows that there is something running in the background
 # and will also prevent you from accidentally closing that session.
 
 exit

 # Or for more complex stuff, use fkill, which can close that 
 # nasty app running on port 6379 - what was it again? No need for netstat.

fkill
SLEEP: 1
:6379

 # Are you a fan of CTRL-R?
 # There is a feature called history reverse search that basically works in all 
 # linux distros, but is disabled by default. :(
 # This setup goes one step further. You can
 # Let me show you:

sshü
SLEEP: 9

 # You can use the right arrow to complete the suggestion or use the up arrow to cycle
 # through all history entries matching whatever you typed containing ssh.

 # Being logged into a remote system will change the prompt to show you that you are
 # on a remote system.

exit

 # Now is the time to press CTRL-R, but this time it's much different and way cooler 
 # than the default version.

SLEEP: 9 : >>>>>>>>> CTRL+R >>> 1.1.1

 # Did you ever ping some box and hated the kind of output you get?

ping 1.1.1.1
SLEEP: 5

 # Meet prettyping, i love it! :)

 # There are many more usefull tools in 

c misc
cat essß
SLEEP: 2
cat addiß

 # Probably one of the most usefull one is tldr, that spares you to read those 
 # horible man pages and also shows some usefull examples.

tldr curl

 # But don't use curl. ;)
 # Use http(ie) or http-prompt for more complex stuff.

 # Did you ever find yourself in the position, where you wanted to scroll back
 # to the first lines of your console output? Or did you ever want to know how long 
 # some command was running?
 # hr will draw a line in case having a colored prompt is not enough.

hr

 # But most of the times it's AFTER long running command X that you know you want to
 # measure the execution time. That's why by default all commands are measured in the 
 # background and everything longer than a few seconds will leave stats after it finishes. 
 # Lets have a look at that while showing of another cool feature: 
 # vim global history
 # Have a look at the dates below, while we are browsing back in history.

v ali
SLEEP: 1
uuuu
uuu
uuu
uuuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
SLEEP: 1
:q!

# ^^ Here are those stats for longer running commands.
# The oldest change is from 2019/10/23 17:04:47 - the date I switched to SpaceVim.
# My previous setup used another directory for the undo files, but having that
# setup by default while using SpaceVim is kinda cool.

 # So now all vim changes are persisted at a local cache directory.

cd /Users/andy/.cache/SpaceVim/undofile
l
SLEEP: 1

dus
which dus

 # And its hardly taking up any noticible space. But having it setup saved 
 # my ass so many times already! :)

echo $PATH

 # Oh thats kinda hard to read, isn't it?
 # I built a different more user friendly version.

path

 # Ahhh .. much better .. and sorted!
 # Sorting is bad you say?
 # Because its not revealing why app X is used from path 1 instead of path 2?
 # Yes, thats right, but which will tell you that too. 
 # It's now listing everything like in this case:

c sal

# BTW: virtualenvs are enabled by default

which uwsgi

 # So, we have this fancy zipped file .. 

t
wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz
SLEEP: 7

 # But what the hell is xz supposed to be?
 # Ah, we don't care!

x pyß
SLEEP: 4

 # Be gone!

rd Python-3.8.2*

 # Oh, and what also saved my ass multiple times: the rd alias is deleting 
 # with trash cli so you can actually undelete stuff again!

undelete
SLEEP:9
0

l

 # And its back - Yeah!

 # Lets quickly share that file.
 # We have two options here with zero setup:

send pyß
SLEEP: 5

 # Or lets send the whole directory!

send .
SLEEP: 5

 # Or lets hand pick some files in the browser:

server
SLEEP: 5

 # Those apps don't use the right ip?
 # Hmm, how do we get the right one again?
 # Lets figure that out on the go ..

ifconfigü
SLEEP: 4
grep inet | grep -v inet6 | ec 2
SLEEP: 3

 # fin
 SLEEP: 2

if command -v colorls >/dev/null 2>&1; then
    alias l='colorls --gs --sd -l'
    alias ll='colorls --gs --sd -la'
    alias lt='colorls --gs --sd -ltr'
    alias llt='colorls --gs --sd -latr'
else
    alias l='ls -Flh'
    alias ll='ls -Flah'
    alias lt='ls -Flthr'
    alias llt='ls -Flathr'
fi

alias cp='cp -iv'

# Enable aliases to be sudo’ed
alias sudo='sudo --preserve-env '

# create folder and cd into it
makedirs () { mkdir -p $1; cd $1 }
alias md='makedirs'
alias rd='trash'
alias undelete="trash-restore"
alias ..='cd ..'
alias ,,='git rev-parse --git-dir >/dev/null 2>&1 && cd `git rev-parse --show-toplevel` || echo "Not in git repo"'
alias dus='du -d 1 -h | sort -h'
alias df="df -h"
alias scr='screen -r'
alias tgz='COPYFILE_DISABLE=true tar -c --exclude=.git --exclude=.DS_Store -zvf '
alias stree='open -a SourceTree .'
alias root='sudo zsh'
alias please='sudo -H '
alias upgrade='sudo apt-get update && sudo apt-get -y upgrade && sudo apt-get -y dist-upgrade && sudo apt-get -y autoremove'
alias t='cd /tmp'
alias o='open .'
alias csv='column -s, -t'
alias wetter='curl wttr.in/Berlin'
alias tm='tmux attach || tmux new'

alias rg="rg -S --max-columns 444"
alias rgi='rg -i --max-columns 444'
alias rga='rgi --hidden --no-ignore --search-zip'

# Show mount information in a nice format
alias mountt="mount | column -t | sort"
alias getmp3="youtube-dl -x --audio-format mp3 "
sleep-in() {echo "Sleeping laptop in $1 minutes..." && sleep $((60 * $1)) && pmset sleepnow}

# GIT stuff
alias gs='git status -s'
alias gu='git submodule update --init --recursive --remote'
alias gd='git diff'
alias gf='git fetch --all --prune'
alias ga='git add'
alias gl='git pull'
alias gp='git push'
commit () { git commit -v -m "$*" }
alias gc='commit'
# show the git graph
alias gg="git log --remotes --tags --oneline --decorate --stat --abbrev-commit --date=relative --branches --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n'"
diff_so_fancy () {diff -u "$@" | diff-so-fancy}
alias diff="diff_so_fancy"
# find files ignored by git and the reason why
alias gfi='find . -type f | grep -v .venv | grep -v .idea | git check-ignore -v --stdin'
alias grm="git branch --merged | grep -v \"\*\" | xargs -n 1 git branch -d"

# helpers
normal=$(tput sgr0)
green=$(tput setaf 2)

# Python / Django
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias shell='python manage.py shell_plus'
# creates a new virtualenv in the current dir including auto setup and activation via direnv
function venv-here {
  echo "layout python3" > .envrc
  echo "FILE=.direnv/\$(basename \$VIRTUAL_ENV)/" >> .envrc
  echo "[ -e .venv ] || ln -s \$FILE .venv" >> .envrc
  direnv allow
  poetry init
  echo "\n\nUse ${green}init_venv${normal} to start with updated base packages.\nStart adding dependencies with ${green}poetry add xy${normal}.\n"
}
alias idea='open -a "IntelliJ IDEA"'
alias init_venv="pip install -U pip setuptools wheel"
alias init_python="init_venv && pip install -U poetry twine bumpversion isort black"

# FASD
alias v='f -e vim' # quick opening files with vim
alias c='z'
alias co='f -e code ' #quick opening files with code
# `o` with no arguments opens the current directory, otherwise opens the given
# location
alias k="kubectl "
alias errorcode="echo $?"

#watcher () { fswatch -o $1 | xargs -n1 -I{} $2 $1 }

# Start an HTTP server from a directory, optionally specifying the port
function server() {
    local IP=`localip`
    local port="${1:-8000}";
    echo "http://$IP:$port/"
    #sleep 1 && open "http://localhost:${port}/" &
    python -m http.server $port
}
alias send="woof"

function which() {
    IFS='
'
    set -f
    for LINE in `type -a $1`; do
        COMMAND=`echo $LINE | cut -d ' ' -f 3`
        if [[ $COMMAND = /* ]]; then
            version=`$COMMAND --version 2>/dev/null` # might not work with all commands
            [[ -n "$version" ]] && version="($version)"
            echo "$1 is $COMMAND $version"
            ll $COMMAND
        else
            echo $LINE
        fi
    done
}

function mv() {
  if [ "$#" -ne 1 ] || [ ! -f "$1" ]; then
    command mv -iv "$@"
    return
  fi

  newfilename="$1"
  vared newfilename
  command mv -iv -- "$1" "$newfilename"
}
function jwt() {
  for part in 1 2; do
    b64="$(cut -f$part -d. <<< "$1" | tr '_-' '/+')"
    len=${#b64}
    n=$((len % 4))
    if [[ 2 -eq n ]]; then
      b64="${b64}=="
    elif [[ 3 -eq n ]]; then
      b64="${b64}="
    fi
    d="$(openssl enc -base64 -d -A <<< "$b64")"
    echo "$d" | jq
    # don't decode further if this is an encrypted JWT (JWE)
    if [[ 1 -eq part ]] && grep '"enc":' <<< "$d" >/dev/null ; then
        return 0
    fi
  done
}

# Globals
alias -g G="| rg -v 'rg -S' | rg "
alias -g L="| less"
alias -g J="| jq"
alias -g C="| wc -l"
alias p="ps aux G "

# get public/local IP addresses
alias ip="curl -s https://ipinfo.io/"
alias ips="ifconfig -a | grep -o 'inet\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet? (addr:)? ?/, \"\"); print }' | grep -v 127.0.0.1"
alias localip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | head -n 1"
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer;
}

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete && find . -name *.pyc -ls -delete"
# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"

# Faster npm for Europeans
command -v npm > /dev/null && alias npme="npm --registry http://registry.npmjs.eu/"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
alias rs="manage.py runserver 0.0.0.0:8000"

alias ping="prettyping --nolegend"
command -v bat >/dev/null 2>&1 && alias cat="bat --theme TwoDark --style=plain --paging never"
command -v ddgr >/dev/null 2>&1 && alias d="ddgr"
command -v ddgr >/dev/null 2>&1 && alias dd="ddgr --ducky"
command -v fzf >/dev/null 2>&1 && alias preview="fzf --preview 'bat --color \"always\" {}'"
command -v gsed >/dev/null 2>&1 && alias sed="gsed"
command -v glances >/dev/null 2>&1 && alias top="glances"
command -v gdate >/dev/null 2>&1 && alias date="gdate"

alias update-dotfiles="~/ghar/dotfiles/misc/update.sh"

